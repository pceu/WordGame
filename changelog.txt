Week 3
Wednesday (20/03/2019) [Both Nam & Ceu]
	- contact each other to 
		+ discuss which platform and IDE (Android Studio) we will be basing for our project
		+ decide which project we will be working
		+ decide which features and levels we will be implementing
		+ learn how to use collaboration software, GitHub, which actually takes a huge amount of time
		+ create a project on Visual Studio and upload it to GitHub

Friday [Both Ceu & Nam]
	+ meet in the class room and test commiting and pushing project to the GitHub
	+ clone the project file to both students' laptop and make some changes and perform commit testing and pushing
	+ make a task plan for week 4
	+ discuss further detail about the project such as sharing ideas and modifications for project

Summary
	In this week, we prepared to be more familiar with the project, discussed and made agreement on what IDE we will be using for the project. Also, we also spent some time to learn how to setup GitHub and create a repository. 

================================================ WEEK 4 =============================================================
Wednesday
	- research some words to be used in the game [Nam = level 1] [Ceu == level 2]
	- Create question for each word – question indicates or describe the question which will help the user to 
`	  get the answer. [Nam = level 1] [Ceu == level 2]
	- Discuss Level class structure as each member needs to be familiar when working on it [Both involved]
	- Assign different tasks to each other [Both]

Friday & Saturday
	- Re-discuss about app colour and design for buttons and TextView [Nam & Ceu]
	- resolve issue with GitHub and Android Studio as the project works for one and doesn't for the other (this takes a while) [Nam]
	- work on main activity - create three buttons and link level to chooseLevelActivity [Nam]
	- create activity for each level (3 levels) [Ceu]
	- Create a Level class which contains question for the word, the answer and others related information about the word. [Ceu]
	- Instantiate a sameple objects for Level 1 [Ceu]
	- Next week, both will be working on level feature again and try to make the game playable for some part by next week. [Nam & Ceu]

Henry notes
	- Excellent progress listed.
	- BUT: please also say WHO did each task (at the end of the line, add [NAME]), so I can match it with attendance.php and assign correct grade allocations at end of trimester.

Summary
	In this week, we are able to complete the weekly tasks that are planned for week 4. We research words that we will be using for each level and decide words that has more letters will be used for higher (3 for level 1, 5 for level 2 and so on). We also create questions (to give hint about the word) which took more time than we expected. There are also other tasks we do that are not listed for week 4 such as re-design class structure again, resolve issue with GitHub and so on. However, compare with our milestones from project plan we are still on the track so far.

================================== WEEK 5==================================================================================
## Week 5, Wednesday 3/April [Henry]
- Try not to hard-code variables even now. Work with files on disk as one of the first things you do.
	- (YES, we do have a plan for storing user data and will be studying and use one of the storing methods in android.
	   
- Include multi-line comments (/* */) before each function, to outline what the function does, any arguments and return types, and how to use it.
	- (We wil sure do this and thanks for reminding).

Important Note
	- This week, we were super busy with other assignments and could not give much time on this project as there are a other assignments due in
	  on this week as well. We are slightly falling behind than our plan; but we will be give more time next week catching up with the works.
	  Appologies for this week progress as we could not give the time as we wanted.

Monday 1/April
	- watch and research some online resources to create buttons and others such as question board. [Ceu]
	- create button images and question board using photoshop. [Ceu]
Saturday 6/April
	- create a layout for level 2 and add buttons, textViews and others necessary for the level. [Ceu]
	- create buttons, question board and others needed for level 1 page. [Nam]
Sunday 7/April
	- write codes on level 2 class to iterate the Level object and adds them on the screen & modify the level 2 layout. [Ceu]
	- create more buttons and linearlayouts for level 2 page. [Ceu]
	- continue work on level 1 page including fixing issue with Ceu's work. [Nam]

Note:   We have similiar xml file to some extent as I (Ceu) have changed and messed up with the drawable (image). Android Studio did not like the name we gave to the images
	as the names do not keep the naming convention the android studio suggests. As a result, when Nam did the 'Pull' and try to push his work
	on GitHub, errors stopped Nam to proceed with pushing his work. Therefore, Nam figured out and fixed the issue by combining his xml file with Ceu's work
	on level 2.

Summary
	We are slightly falling behind compare to the task we plan to finish in this week as both of us are super busy with other assessments. However, we discuss this matter and agree to catch up (commit more time than before) in week 6. We cannot finish all level 1, 2 and 3.



================================== WEEK 6 ==================================================================================
# Monday 8/April [Henry]
- This project is falling behind. You should be finished your primary feature by now. You need much more work to pass.

# Monday 8/April
- assign Level object attributes to appropriate buttons and textView on the screen [Ceu]
- Update level 2 layout [Ceu]

# Tuesday 9/April
- update level 2 (nearly completed level to make the level playable) [Ceu]
	- program to transfer letters in Level Object to word buttons on the screen. [Ceu]
	- program to compare user selected letters with answer stored in Level class. [Ceu]
- complete level 2 (implement level feature) [Ceu]

# Wednesday 10/April
- completed level feature for all level 1, 2 and 3. [Ceu]
- meet with group partner and split tasks for this week [Ceu] [Nam]
- Nam is assigned to 'Coin' feature; and Ceu is assigned to 'Hint' feature

# Thursday 11/April [Henry]
- Good to see code comments improve.
- This file MUST BE UPDATED every day (every work session), per person, to tell the other person what was changed. Otherwise we don't have a summary (me or your teammate) of what you changed.

# Thursday 11/April
- created and added three csv files for level 1, 2 and 3 into the project [Ceu]
- implement a function for each level to read a csv file, create objects and add them in a Level list stored in each class. [Ceu]

# Friday 12/April
- solved loading typeface issue in the project. [Ceu]
- create hint button using photoshop [Ceu]
- Designed the ChooseLevelPage [Nam]
- Inserted Main Logo [Nam]

# Saturday 13/April
- implemented erase answer feature for level 2 and 3. [Ceu]
- implemented hint feature (for all levels) [Ceu]
- Designed coin icon and coin box at all layout page [Nam]
- Tried that increasing coin when user find a correct answer [Nam]
- update changelog.txt for this week [Both]

Summary
	Like we mentioned in the previous week, we commit more time than before to catch up with our milestone on the project. We finish the task listed for both week 5 and 6 in this week except increasing coin number when user gets correct answer. However, this is not a case that we intentionally left this, but we are in a situation that we need more time to read the program and implement this feature correctly. We did try to implement this feature in this week.


================================== WEEK 7 ==================================================================================
# Monday 15/April
- Feedback: Good to see some more progress. [Henry]
- Feedback: The 3 Level classes should be combined into 1. I don't see the reason for 3 of them.
	- Plan to do this over the break as we need to reprogram all the levels.
- Feedback: As I told the class last week in a discussion post, remove repetition. This part: " if(!setAnswerBtn1) {" and "if(!setAnswerBtn2) {" , etc... they're all the same. So use a FOR loop and arrays instead.
	- will make sure use them in the most efficient and not repeated way.

# Wednesday 17/April
- fix increasing coin issue [Nam] & [Ceu]
- create skip button using Photoshop [Ceu]
- implement skip question feature for all levels (without popup message window) [Ceu]
	+ write functions to skip(check and reduce the coin amount and pass the next question object) the question for level 1, 2 and 3.
	+ add skip button to level 1, 2 and 3.

# Friday 19/April
- Add background music when user play the word game (only Level 1, 2, 3 layout pages) [Nam]
- Create setting xml file and designed [Nam]

# Sunday 21/April
- research and study about Room (storing technique in Android) to implement this in the project [Ceu]
- Add function that music turn on and off [Nam]

Summary
	In this week, we are able to complete and implement the coin feature that we could not finish in week 6. Although we are able to finish all the tasks listed for week 7 (music and skip features), we are struggling and misunderstanding with Henry’s suggestion. It needs to re-program all the levels as one not as a different class for each one. After a group meeting, we decided our program to change in a way that fits Henry’s suggestion as our app does not meet a professional coding level. We plan to give some time on Easter break to study and modify our project.

================================ EASTER BREAK + WEEK 8 =========================================================================================
# Wednesday 24/April [Ceu]
- working on modifying all levels ( using superclass and arrays for buttons and Booleans)
	+ did not commit or push as this will only be push once the modified levels are working properly as it could ruin the previous data in GitHub
	+ Haven't finished yet still left so many things to do.
	+ contact Nam to do some readings about using superclass in java
- as requested by Henry, read and learn about super class and try to implement but as Java does not support multiple class inheritance and could not use the super class in java. 
  However, after some research, use interface for all the levels to implement. Interface only allow method without any inside declaration, and thus methods and appropriate attributes are declared in level interface.
- modified all the level 1,2 and 3 such as using arrays and loop for buttons (which reduces hundreds of lines of code), introducing new methods to reduce code redundancy, use of inheritance in all the levels.
- modified all the level 1,2 and 3 such as using arrays and loop for buttons (which reduces hundreds of lines of code), introducing new methods to reduce code redundancy, use of inheritance in all the levels.

# Friday 26/April [Ceu]
- Working on Room (saving user data to local Drive)
	+ create and work on User entity class for Room
	+ Create and work on UserDao.java class
	+ Create and work on UserDatabase.java class
	+ solve problem with gradle (this one took me a while to figure out as my project won't compile). Using Room need us to upgrade some gradle dependencies and migrate to AndroidX and so on.
	+ - implement Room for all level 1, 2 and 3:
		# saving user progress coinAmount, question number to database
		# retrieving user data coinAmount, question number for level and resume the game from where user has left

# Saturday 27/April [Ceu]
- study and research about Timer in android

# Sunday 28/April [Ceu]
- Work on Setting Activity:
	+ create SwitchCompat for Timer and Music (both java and xml file)
	+ implement switch buttons for timer and music
	+ create and work on switch_thumb.xml
	+ create and work on switch_track.xml
	+ modified and add some colors to colors.xml
	+ add some string to strings.xml

# Monday 29/Apr
- Implement Timer for Level 1:
	+ modify levelOneActivity.java - add variable and other CountDownTimer object, then create methods for timer. [Ceu]
	+ create and work on coin_icon.xml - Add coin icon as a drawableStart for coin button to look nice. [Ceu]
	+ modify activity_level_one.xml - Create textView for Timer. [Ceu]

# Wednesday 30/Apr
- Modified some code of music turn on/off. [Nam]
- created splash screen layout with app icon. [Nam]

# Thursday 2/May
  (Note: I mentioned that i use interface instead of super class as I could not figure out how to use inheritance using super class. However, after reading
         and researching online resources, came up with an idea where Level extends AppCompatActivity and level 1, 2 and 3 extends level.
         In this way Level 1, 2 and 3 also inherit from AppCompatActivity as their parent class Level inherit it.) [Ceu]
- working on combining all the levels into one to use a super class. Previously, using interface does not reduces code redundancy and was not professional.
  In this lab, successfully figure out how to combing all levels by using super class in java. Some attributes are override for different levels and assign 
  different values for some class attributes. Been spending time on this and now, I can figure out successfully. [Ceu]

# Friday 3/May
- study how to create custom message box or alert for the project [Ceu]

# Sunday 5/May [Ceu]
- implement popup message for level one and work include:
	+ changing Level abstract java class - add two positive and negative message methods
	+ write code for popup message for levelOneActivity
	+ create 5 vector assets using android studio
	+ create and work on two new layouts for popup message - negative_message.xml and positive_message.xml
	+ add message_button_round_green.xml and message_button_round_white.xml
	+ add values to colors.xml
	+ add values to strings.xml

Summary
	Like we planned on week 7, we committed time during Easter break to solve the problem with levels. As a solution, an interface is created and implements from level 1, 2 and 3. However, this does not reduce code redundancy and does not solve the problem at all. After some further study in week 8, we figure out a way to use super class for all levels and extends the super class which solve the problem with code redundancy and repetition in the three levels. We are able to finish week 8 tasks in our milestone as well in this week.

=========================== WEEK 9 ========================================================================================

# Monday 6/May
- complete popup message for level 2 and 3:
	+ modify Level.java [Ceu]
 	+ LevelOneActivity.java [Ceu]
 	+ LevelTwoActivity.java [Ceu]
 	+ LevelThreeActivity.java [Ceu]

# Tuesday 7/May
- [Ceu] work on bugs hunting and fixing using exception and try & catch (for all java classes in the project except Database related file).
- [Ceu] hint is deleted from raw files level 1, 2, 3 and LevelData as we don't use it in the project (we can give the hint depending on what user has not filled in the answer). This is much more advanced than just throwing random letter to the user.
- [Ceu] create custom exception class.
- implement saving log file and create a separate page for log: [Ceu]
 	- create LogActivity [Ceu]
 	- all the class that catch some exception are saved and display in LogActivity [Ceu]
 	- modify almost all java class file [Ceu]
 	- create vector asset for delete button [Ceu]

# Wednesday 8/May [Henry]
- Good progress. Glad to see it's getting closer. Final stretch now. 
- Make sure you go over everything in the Grading Criteria super carefully, to ensure you meet each point.

# Saturday 11/May [Nam]
- created a License text file.
- the UI fit nicely on the screen, regardless of different window widths and heights.
- Landscape mode.

# Saturday 11/May 
- finish off with README.md file task in criteria [Ceu]

Summary 
	After a long discussion between team members and replies from Henry, the unit chair, we decide to drop out week 9 features as we agree to focus more on hunting bugs and fixing them. We successfully implementing code quality as stated in the project marking criteria. Unexpectedly, we are having trouble with resuming the game when screen rotate; we spend a certain amount of time to figure this out but we cannot in this week. Initially, we planned only to record video in week 10 but we decide to give some more time on this and solve in week 10.

========================  WEEK 10 ============================================================================================
# Tuesday 14/May
- resume game when configuration change (portrait and landscape) [Ceu]
- resume timer when configuration change (portrait and landscape) [Ceu]
- save and resume duration when onPause [Ceu]
- add comments for class overview [Ceu]



Summary
	After two days spending for resuming game when screen rotate, we are able to resolve this problem.













